plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.20"
    id "org.jetbrains.kotlin.kapt" version "1.3.20"
}

ext {
    bomExclude = true
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.20"
    compile "org.jetbrains.kotlin:kotlin-reflect:1.3.20"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:1.1.1"
    compile project(':http-server-netty')
    compile project(':http-client')
    compile project(':runtime')

    testCompile project(":inject")
    testCompile dependencyVersion("jcache")
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:1.3.20"
    testCompile "org.jetbrains.kotlin:kotlin-test:1.3.20"
    
    testCompileOnly project(':inject-java')
    kaptTest project(':inject-java')
    kaptTest project(':validation')
    testCompile project(":http-client")
    testCompile 'io.kotlintest:kotlintest-runner-junit5:3.3.0'
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

test {
    useJUnitPlatform()
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    testLogging {
        events "PASSED", "FAILED", "SKIPPED", "STANDARD_OUT", "STANDARD_ERROR"
    }
}
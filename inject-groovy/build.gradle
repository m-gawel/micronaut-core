apply plugin: 'com.github.johnrengelman.plugin-shadow'


dependencies {
    shadowCompile project(":inject")
    compile project(":inject")
    shadowCompile project(":aop")
    compile project(":aop")
    shadowCompile dependencyVersion("groovy")
    compile dependencyVersion("groovy")

    testCompile "junit:junit:4.7"
//    testCompile 'javax.validation:validation-api:1.1.0.Final'
    testCompile "org.hibernate:hibernate-core:5.1.5.Final"
    testCompile 'org.hibernate:hibernate-validator:5.4.1.Final'
    testRuntime 'org.glassfish.web:el-impl:2.2.1-b05'

    testCompile project(":http-server-netty")
    testCompile project(":http-client")
    testCompile dependencyModuleVersion("groovy", "groovy-json")
}


shadowJar {
    dependencies {
        for(dep in project.configurations.shadowCompile.dependencies) {
            if(dep instanceof ProjectDependency) {
                exclude(project(":$dep.name"))
            }
            else if(dep instanceof ExternalDependency) {
                exclude(dependency("$dep.group:$dep.name:.*"))
            }
        }
        exclude(project(":inject"))
        exclude(project(":core"))

        exclude(dependency(dependencyVersion("slf4j")))
        exclude(dependency(dependencyVersion("snakeyaml")))
        exclude(dependency(group: 'javax.inject', name: 'javax.inject', version: '1'))
        exclude(dependency('org.ow2.asm:.*:.*'))
        exclude(dependency('org.reactivestreams:.*:.*'))
        exclude(dependency('com.google.code.findbugs:.*:.*'))
        exclude(dependency('com.github.ben-manes.caffeine:.*:.*'))
    }

    relocate "org.objectweb.asm", "io.micronaut.asm"
    relocate "com.github.benmanes.caffeine", "io.micronaut.caffeine"
}

tasks.withType(com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation) { t ->
    t.enabled = false
}

//compileTestGroovy.groovyOptions.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']